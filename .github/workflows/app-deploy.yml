# .github/workflows/app-deploy.yml
name: Build & deploy app

on:
  push:
    branches: [ main ]
    paths:
      - "static/**"
      - "templates/**"
      - "app.py"
      - "Dockerfile"
      - ".github/workflows/app-deploy.yml"

env:
  REGISTRY_NAME:   jwendtacr
  REGISTRY_LOGIN:  jwendtacr.azurecr.io
  IMAGE_BASE_NAME: flaskweb
  WEBAPP_NAME:     jwendt-web
  RESOURCE_GROUP:  BCSAI2024-DEVOPS-STUDENTS-A-UAT

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # ── checkout ────────────────────────────────────────────────
      - uses: actions/checkout@v4

      # ── login to Azure (SP from secret) ─────────────────────────
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ── docker login to ACR using that AAD token ────────────────
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_LOGIN }}

      # ── build & push image ──────────────────────────────────────
      - name: Set image tag
        run: echo "VER=${{ github.ref_name }}-$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_ENV

      - name: Build & push
        run: |
          docker build . `
            -t $REGISTRY_LOGIN/$IMAGE_BASE_NAME:$VER `
            -t $REGISTRY_LOGIN/$IMAGE_BASE_NAME:latest
          docker push $REGISTRY_LOGIN/$IMAGE_BASE_NAME:$VER
          docker push $REGISTRY_LOGIN/$IMAGE_BASE_NAME:latest

      # ── fetch ACR admin creds for deploy ────────────────────────
      - name: Fetch ACR admin creds
        run: |
          CREDS=$(az acr credential show -n $REGISTRY_NAME -g $RESOURCE_GROUP --query "{u:username,p:passwords[0].value}" -o tsv)
          echo "ACR_USER=$(echo $CREDS | awk '{print $1}')" >> $GITHUB_ENV
          echo "ACR_PASS=$(echo $CREDS | awk '{print $2}')" >> $GITHUB_ENV

      # ── deploy to Web App ───────────────────────────────────────
      - name: Deploy container to Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name:     ${{ env.WEBAPP_NAME }}
          registry-url: ${{ env.REGISTRY_LOGIN }}
          username:     ${{ env.ACR_USER }}
          password:     ${{ env.ACR_PASS }}
          images:       ${{ env.REGISTRY_LOGIN }}/${{ env.IMAGE_BASE_NAME }}:${{ env.VER }}
